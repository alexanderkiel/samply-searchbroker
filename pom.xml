<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <artifactId>share.broker.rest</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <parent>
        <artifactId>parent</artifactId>
        <groupId>de.samply</groupId>
        <version>10.1</version>
    </parent>

    <properties>
        <samply.project.context>samply</samply.project.context>

        <database.username>samplyweb</database.username>
        <database.password>samplyweb</database.password>
        <database.url>jdbc:postgresql://localhost:5432/broker</database.url>
        <database.schema>samply</database.schema>

        <share-common.version>3.1.0</share-common.version>
        <share-broker.version>3.0.1-SNAPSHOT</share-broker.version>
        <version.flyway>4.2.0</version.flyway>
        <version.jooq>3.9.5</version.jooq>
    </properties>

    <build>
        <plugins>
            <!-- JOOQ Plugin - Generate Java Classes from Database -->
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${version.jooq}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${version.postgres}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <jdbc>
                        <driver>org.postgresql.Driver</driver>
                        <url>${database.url}</url>
                        <user>${database.username}</user>
                        <password>${database.password}</password>
                    </jdbc>
                    <generator>
                        <database>
                            <name>org.jooq.util.postgres.PostgresDatabase</name>
                            <includes>.*</includes>
                            <excludes>samply.schema_version</excludes>
                            <inputSchema>${database.schema}</inputSchema>
                        </database>
                        <generate>
                            <relations>true</relations>
                            <deprecated>true</deprecated>
                            <instanceFields>true</instanceFields>
                            <generatedAnnotation>true</generatedAnnotation>
                            <records>true</records>
                            <pojos>true</pojos>
                            <immutablePojos>false</immutablePojos>
                            <interfaces>false</interfaces>
                            <daos>true</daos>
                            <jpaAnnotations>false</jpaAnnotations>
                            <validationAnnotations>false</validationAnnotations>
                        </generate>
                        <target>
                            <packageName>de.samply.share.broker.rest.model.db</packageName>
                            <directory>src/main/java</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>
            <!-- Flyway Plugin - Create Database from SQL files -->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${version.flyway}</version>
                <configuration>
                    <url>${database.url}</url>
                    <user>${database.username}</user>
                    <password>${database.password}</password>
                    <schemas>
                        <schema>${database.schema}</schema>
                    </schemas>
                    <locations>
                        <location>filesystem:src/main/resources/db.migration.samply</location>
                    </locations>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Samply-Project-Context>${samply.project.context}</Samply-Project-Context>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>



    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
        </dependency>
        <dependency>
            <groupId>de.samply</groupId>
            <artifactId>share-common</artifactId>
            <version>${share-common.version}</version>
        </dependency>
        <dependency>
            <groupId>de.samply</groupId>
            <artifactId>share-broker</artifactId>
            <version>${share-broker.version}</version>
        </dependency>

    </dependencies>
</project>
