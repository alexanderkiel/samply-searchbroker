/*
 * This file is generated by jOOQ.
*/
package de.samply.share.broker.model.db.tables.records;


import de.samply.share.broker.model.db.enums.ProjectStatus;
import de.samply.share.broker.model.db.tables.Project;

import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectRecord extends UpdatableRecordImpl<ProjectRecord> implements Record13<Integer, String, Timestamp, Timestamp, Date, Date, Date, Boolean, Integer, Boolean, ProjectStatus, Integer, Boolean> {

    private static final long serialVersionUID = -1936081121;

    /**
     * Setter for <code>samply.project.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>samply.project.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>samply.project.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>samply.project.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>samply.project.received</code>.
     */
    public void setReceived(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>samply.project.received</code>.
     */
    public Timestamp getReceived() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>samply.project.approved</code>.
     */
    public void setApproved(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>samply.project.approved</code>.
     */
    public Timestamp getApproved() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>samply.project.started</code>.
     */
    public void setStarted(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>samply.project.started</code>.
     */
    public Date getStarted() {
        return (Date) get(4);
    }

    /**
     * Setter for <code>samply.project.end_estimated</code>.
     */
    public void setEndEstimated(Date value) {
        set(5, value);
    }

    /**
     * Getter for <code>samply.project.end_estimated</code>.
     */
    public Date getEndEstimated() {
        return (Date) get(5);
    }

    /**
     * Setter for <code>samply.project.end_actual</code>.
     */
    public void setEndActual(Date value) {
        set(6, value);
    }

    /**
     * Getter for <code>samply.project.end_actual</code>.
     */
    public Date getEndActual() {
        return (Date) get(6);
    }

    /**
     * Setter for <code>samply.project.seen</code>.
     */
    public void setSeen(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>samply.project.seen</code>.
     */
    public Boolean getSeen() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>samply.project.projectleader_id</code>.
     */
    public void setProjectleaderId(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>samply.project.projectleader_id</code>.
     */
    public Integer getProjectleaderId() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>samply.project.archived</code>.
     */
    public void setArchived(Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>samply.project.archived</code>.
     */
    public Boolean getArchived() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>samply.project.status</code>.
     */
    public void setStatus(ProjectStatus value) {
        set(10, value);
    }

    /**
     * Getter for <code>samply.project.status</code>.
     */
    public ProjectStatus getStatus() {
        return (ProjectStatus) get(10);
    }

    /**
     * Setter for <code>samply.project.application_number</code>.
     */
    public void setApplicationNumber(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>samply.project.application_number</code>.
     */
    public Integer getApplicationNumber() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>samply.project.external_assessment</code>.
     */
    public void setExternalAssessment(Boolean value) {
        set(12, value);
    }

    /**
     * Getter for <code>samply.project.external_assessment</code>.
     */
    public Boolean getExternalAssessment() {
        return (Boolean) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, String, Timestamp, Timestamp, Date, Date, Date, Boolean, Integer, Boolean, ProjectStatus, Integer, Boolean> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, String, Timestamp, Timestamp, Date, Date, Date, Boolean, Integer, Boolean, ProjectStatus, Integer, Boolean> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Project.PROJECT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Project.PROJECT.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Project.PROJECT.RECEIVED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Project.PROJECT.APPROVED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field5() {
        return Project.PROJECT.STARTED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field6() {
        return Project.PROJECT.END_ESTIMATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field7() {
        return Project.PROJECT.END_ACTUAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field8() {
        return Project.PROJECT.SEEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return Project.PROJECT.PROJECTLEADER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field10() {
        return Project.PROJECT.ARCHIVED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ProjectStatus> field11() {
        return Project.PROJECT.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field12() {
        return Project.PROJECT.APPLICATION_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field13() {
        return Project.PROJECT.EXTERNAL_ASSESSMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getReceived();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getApproved();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value5() {
        return getStarted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value6() {
        return getEndEstimated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value7() {
        return getEndActual();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value8() {
        return getSeen();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getProjectleaderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value10() {
        return getArchived();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectStatus value11() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value12() {
        return getApplicationNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value13() {
        return getExternalAssessment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value3(Timestamp value) {
        setReceived(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value4(Timestamp value) {
        setApproved(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value5(Date value) {
        setStarted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value6(Date value) {
        setEndEstimated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value7(Date value) {
        setEndActual(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value8(Boolean value) {
        setSeen(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value9(Integer value) {
        setProjectleaderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value10(Boolean value) {
        setArchived(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value11(ProjectStatus value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value12(Integer value) {
        setApplicationNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value13(Boolean value) {
        setExternalAssessment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord values(Integer value1, String value2, Timestamp value3, Timestamp value4, Date value5, Date value6, Date value7, Boolean value8, Integer value9, Boolean value10, ProjectStatus value11, Integer value12, Boolean value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectRecord
     */
    public ProjectRecord() {
        super(Project.PROJECT);
    }

    /**
     * Create a detached, initialised ProjectRecord
     */
    public ProjectRecord(Integer id, String name, Timestamp received, Timestamp approved, Date started, Date endEstimated, Date endActual, Boolean seen, Integer projectleaderId, Boolean archived, ProjectStatus status, Integer applicationNumber, Boolean externalAssessment) {
        super(Project.PROJECT);

        set(0, id);
        set(1, name);
        set(2, received);
        set(3, approved);
        set(4, started);
        set(5, endEstimated);
        set(6, endActual);
        set(7, seen);
        set(8, projectleaderId);
        set(9, archived);
        set(10, status);
        set(11, applicationNumber);
        set(12, externalAssessment);
    }
}
