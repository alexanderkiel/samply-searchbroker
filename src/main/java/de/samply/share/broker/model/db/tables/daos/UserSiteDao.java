/*
 * This file is generated by jOOQ.
*/
package de.samply.share.broker.model.db.tables.daos;


import de.samply.share.broker.model.db.tables.UserSite;
import de.samply.share.broker.model.db.tables.records.UserSiteRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserSiteDao extends DAOImpl<UserSiteRecord, de.samply.share.broker.model.db.tables.pojos.UserSite, Record2<Integer, Integer>> {

    /**
     * Create a new UserSiteDao without any configuration
     */
    public UserSiteDao() {
        super(UserSite.USER_SITE, de.samply.share.broker.model.db.tables.pojos.UserSite.class);
    }

    /**
     * Create a new UserSiteDao with an attached configuration
     */
    public UserSiteDao(Configuration configuration) {
        super(UserSite.USER_SITE, de.samply.share.broker.model.db.tables.pojos.UserSite.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<Integer, Integer> getId(de.samply.share.broker.model.db.tables.pojos.UserSite object) {
        return compositeKeyRecord(object.getUserId(), object.getSiteId());
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.UserSite> fetchByUserId(Integer... values) {
        return fetch(UserSite.USER_SITE.USER_ID, values);
    }

    /**
     * Fetch records that have <code>site_id IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.UserSite> fetchBySiteId(Integer... values) {
        return fetch(UserSite.USER_SITE.SITE_ID, values);
    }

    /**
     * Fetch records that have <code>approved IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.UserSite> fetchByApproved(Boolean... values) {
        return fetch(UserSite.USER_SITE.APPROVED, values);
    }
}
