/*
 * This file is generated by jOOQ.
*/
package de.samply.share.broker.model.db.tables.daos;


import de.samply.share.broker.model.db.tables.EmailSite;
import de.samply.share.broker.model.db.tables.records.EmailSiteRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmailSiteDao extends DAOImpl<EmailSiteRecord, de.samply.share.broker.model.db.tables.pojos.EmailSite, Integer> {

    /**
     * Create a new EmailSiteDao without any configuration
     */
    public EmailSiteDao() {
        super(EmailSite.EMAIL_SITE, de.samply.share.broker.model.db.tables.pojos.EmailSite.class);
    }

    /**
     * Create a new EmailSiteDao with an attached configuration
     */
    public EmailSiteDao(Configuration configuration) {
        super(EmailSite.EMAIL_SITE, de.samply.share.broker.model.db.tables.pojos.EmailSite.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(de.samply.share.broker.model.db.tables.pojos.EmailSite object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.EmailSite> fetchById(Integer... values) {
        return fetch(EmailSite.EMAIL_SITE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public de.samply.share.broker.model.db.tables.pojos.EmailSite fetchOneById(Integer value) {
        return fetchOne(EmailSite.EMAIL_SITE.ID, value);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.EmailSite> fetchByEmail(String... values) {
        return fetch(EmailSite.EMAIL_SITE.EMAIL, values);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public de.samply.share.broker.model.db.tables.pojos.EmailSite fetchOneByEmail(String value) {
        return fetchOne(EmailSite.EMAIL_SITE.EMAIL, value);
    }

    /**
     * Fetch records that have <code>site IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.EmailSite> fetchBySite(Integer... values) {
        return fetch(EmailSite.EMAIL_SITE.SITE, values);
    }
}
