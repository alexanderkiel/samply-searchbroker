/*
 * This file is generated by jOOQ.
*/
package de.samply.share.broker.model.db.tables.daos;


import de.samply.share.broker.model.db.tables.Consent;
import de.samply.share.broker.model.db.tables.records.ConsentRecord;

import java.sql.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConsentDao extends DAOImpl<ConsentRecord, de.samply.share.broker.model.db.tables.pojos.Consent, Integer> {

    /**
     * Create a new ConsentDao without any configuration
     */
    public ConsentDao() {
        super(Consent.CONSENT, de.samply.share.broker.model.db.tables.pojos.Consent.class);
    }

    /**
     * Create a new ConsentDao with an attached configuration
     */
    public ConsentDao(Configuration configuration) {
        super(Consent.CONSENT, de.samply.share.broker.model.db.tables.pojos.Consent.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(de.samply.share.broker.model.db.tables.pojos.Consent object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Consent> fetchById(Integer... values) {
        return fetch(Consent.CONSENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public de.samply.share.broker.model.db.tables.pojos.Consent fetchOneById(Integer value) {
        return fetchOne(Consent.CONSENT.ID, value);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Consent> fetchByVersion(String... values) {
        return fetch(Consent.CONSENT.VERSION, values);
    }

    /**
     * Fetch a unique record that has <code>version = value</code>
     */
    public de.samply.share.broker.model.db.tables.pojos.Consent fetchOneByVersion(String value) {
        return fetchOne(Consent.CONSENT.VERSION, value);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Consent> fetchByContent(String... values) {
        return fetch(Consent.CONSENT.CONTENT, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Consent> fetchByCreated(Date... values) {
        return fetch(Consent.CONSENT.CREATED, values);
    }
}
