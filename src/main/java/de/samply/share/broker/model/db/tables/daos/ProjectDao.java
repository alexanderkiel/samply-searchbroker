/*
 * This file is generated by jOOQ.
*/
package de.samply.share.broker.model.db.tables.daos;


import de.samply.share.broker.model.db.enums.ProjectStatus;
import de.samply.share.broker.model.db.tables.Project;
import de.samply.share.broker.model.db.tables.records.ProjectRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectDao extends DAOImpl<ProjectRecord, de.samply.share.broker.model.db.tables.pojos.Project, Integer> {

    /**
     * Create a new ProjectDao without any configuration
     */
    public ProjectDao() {
        super(Project.PROJECT, de.samply.share.broker.model.db.tables.pojos.Project.class);
    }

    /**
     * Create a new ProjectDao with an attached configuration
     */
    public ProjectDao(Configuration configuration) {
        super(Project.PROJECT, de.samply.share.broker.model.db.tables.pojos.Project.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(de.samply.share.broker.model.db.tables.pojos.Project object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Project> fetchById(Integer... values) {
        return fetch(Project.PROJECT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public de.samply.share.broker.model.db.tables.pojos.Project fetchOneById(Integer value) {
        return fetchOne(Project.PROJECT.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Project> fetchByName(String... values) {
        return fetch(Project.PROJECT.NAME, values);
    }

    /**
     * Fetch records that have <code>received IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Project> fetchByReceived(Timestamp... values) {
        return fetch(Project.PROJECT.RECEIVED, values);
    }

    /**
     * Fetch records that have <code>approved IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Project> fetchByApproved(Timestamp... values) {
        return fetch(Project.PROJECT.APPROVED, values);
    }

    /**
     * Fetch records that have <code>started IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Project> fetchByStarted(Date... values) {
        return fetch(Project.PROJECT.STARTED, values);
    }

    /**
     * Fetch records that have <code>end_estimated IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Project> fetchByEndEstimated(Date... values) {
        return fetch(Project.PROJECT.END_ESTIMATED, values);
    }

    /**
     * Fetch records that have <code>end_actual IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Project> fetchByEndActual(Date... values) {
        return fetch(Project.PROJECT.END_ACTUAL, values);
    }

    /**
     * Fetch records that have <code>seen IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Project> fetchBySeen(Boolean... values) {
        return fetch(Project.PROJECT.SEEN, values);
    }

    /**
     * Fetch records that have <code>projectleader_id IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Project> fetchByProjectleaderId(Integer... values) {
        return fetch(Project.PROJECT.PROJECTLEADER_ID, values);
    }

    /**
     * Fetch records that have <code>archived IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Project> fetchByArchived(Boolean... values) {
        return fetch(Project.PROJECT.ARCHIVED, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Project> fetchByStatus(ProjectStatus... values) {
        return fetch(Project.PROJECT.STATUS, values);
    }

    /**
     * Fetch records that have <code>application_number IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Project> fetchByApplicationNumber(Integer... values) {
        return fetch(Project.PROJECT.APPLICATION_NUMBER, values);
    }

    /**
     * Fetch records that have <code>external_assessment IN (values)</code>
     */
    public List<de.samply.share.broker.model.db.tables.pojos.Project> fetchByExternalAssessment(Boolean... values) {
        return fetch(Project.PROJECT.EXTERNAL_ASSESSMENT, values);
    }
}
