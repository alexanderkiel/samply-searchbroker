/*
 * This file is generated by jOOQ.
*/
package de.samply.share.broker.model.db.tables;


import de.samply.share.broker.model.db.Keys;
import de.samply.share.broker.model.db.Samply;
import de.samply.share.broker.model.db.tables.records.SiteRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Site extends TableImpl<SiteRecord> {

    private static final long serialVersionUID = 1314699498;

    /**
     * The reference instance of <code>samply.site</code>
     */
    public static final Site SITE = new Site();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SiteRecord> getRecordType() {
        return SiteRecord.class;
    }

    /**
     * The column <code>samply.site.id</code>.
     */
    public final TableField<SiteRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('samply.site_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>samply.site.name</code>.
     */
    public final TableField<SiteRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>samply.site.name_extended</code>.
     */
    public final TableField<SiteRecord, String> NAME_EXTENDED = createField("name_extended", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>samply.site.description</code>.
     */
    public final TableField<SiteRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>samply.site.contact</code>.
     */
    public final TableField<SiteRecord, String> CONTACT = createField("contact", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>samply.site</code> table reference
     */
    public Site() {
        this("site", null);
    }

    /**
     * Create an aliased <code>samply.site</code> table reference
     */
    public Site(String alias) {
        this(alias, SITE);
    }

    private Site(String alias, Table<SiteRecord> aliased) {
        this(alias, aliased, null);
    }

    private Site(String alias, Table<SiteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Samply.SAMPLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SiteRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SITE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SiteRecord> getPrimaryKey() {
        return Keys.SITE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SiteRecord>> getKeys() {
        return Arrays.<UniqueKey<SiteRecord>>asList(Keys.SITE_PKEY, Keys.SITE_NAME_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Site as(String alias) {
        return new Site(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Site rename(String name) {
        return new Site(name, null);
    }
}
