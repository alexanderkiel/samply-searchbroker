/*
 * This file is generated by jOOQ.
*/
package de.samply.share.broker.model.db.tables.records;


import de.samply.share.broker.model.db.enums.DocumentType;
import de.samply.share.broker.model.db.tables.Document;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocumentRecord extends UpdatableRecordImpl<DocumentRecord> implements Record9<Integer, Integer, Integer, Integer, Date, String, String, byte[], DocumentType> {

    private static final long serialVersionUID = -1093233284;

    /**
     * Setter for <code>samply.document.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>samply.document.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>samply.document.project_id</code>.
     */
    public void setProjectId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>samply.document.project_id</code>.
     */
    public Integer getProjectId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>samply.document.inquiry_id</code>.
     */
    public void setInquiryId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>samply.document.inquiry_id</code>.
     */
    public Integer getInquiryId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>samply.document.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>samply.document.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>samply.document.uploaded_at</code>.
     */
    public void setUploadedAt(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>samply.document.uploaded_at</code>.
     */
    public Date getUploadedAt() {
        return (Date) get(4);
    }

    /**
     * Setter for <code>samply.document.filetype</code>.
     */
    public void setFiletype(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>samply.document.filetype</code>.
     */
    public String getFiletype() {
        return (String) get(5);
    }

    /**
     * Setter for <code>samply.document.filename</code>.
     */
    public void setFilename(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>samply.document.filename</code>.
     */
    public String getFilename() {
        return (String) get(6);
    }

    /**
     * Setter for <code>samply.document.data</code>.
     */
    public void setData(byte... value) {
        set(7, value);
    }

    /**
     * Getter for <code>samply.document.data</code>.
     */
    public byte[] getData() {
        return (byte[]) get(7);
    }

    /**
     * Setter for <code>samply.document.document_type</code>.
     */
    public void setDocumentType(DocumentType value) {
        set(8, value);
    }

    /**
     * Getter for <code>samply.document.document_type</code>.
     */
    public DocumentType getDocumentType() {
        return (DocumentType) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, Integer, Integer, Integer, Date, String, String, byte[], DocumentType> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, Integer, Integer, Integer, Date, String, String, byte[], DocumentType> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Document.DOCUMENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Document.DOCUMENT.PROJECT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Document.DOCUMENT.INQUIRY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Document.DOCUMENT.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field5() {
        return Document.DOCUMENT.UPLOADED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Document.DOCUMENT.FILETYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Document.DOCUMENT.FILENAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field8() {
        return Document.DOCUMENT.DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<DocumentType> field9() {
        return Document.DOCUMENT.DOCUMENT_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getProjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getInquiryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value5() {
        return getUploadedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getFiletype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getFilename();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value8() {
        return getData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentType value9() {
        return getDocumentType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord value2(Integer value) {
        setProjectId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord value3(Integer value) {
        setInquiryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord value4(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord value5(Date value) {
        setUploadedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord value6(String value) {
        setFiletype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord value7(String value) {
        setFilename(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord value8(byte... value) {
        setData(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord value9(DocumentType value) {
        setDocumentType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Date value5, String value6, String value7, byte[] value8, DocumentType value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DocumentRecord
     */
    public DocumentRecord() {
        super(Document.DOCUMENT);
    }

    /**
     * Create a detached, initialised DocumentRecord
     */
    public DocumentRecord(Integer id, Integer projectId, Integer inquiryId, Integer userId, Date uploadedAt, String filetype, String filename, byte[] data, DocumentType documentType) {
        super(Document.DOCUMENT);

        set(0, id);
        set(1, projectId);
        set(2, inquiryId);
        set(3, userId);
        set(4, uploadedAt);
        set(5, filetype);
        set(6, filename);
        set(7, data);
        set(8, documentType);
    }
}
