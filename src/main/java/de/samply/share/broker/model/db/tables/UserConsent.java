/*
 * This file is generated by jOOQ.
*/
package de.samply.share.broker.model.db.tables;


import de.samply.share.broker.model.db.Keys;
import de.samply.share.broker.model.db.Samply;
import de.samply.share.broker.model.db.tables.records.UserConsentRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserConsent extends TableImpl<UserConsentRecord> {

    private static final long serialVersionUID = 266685958;

    /**
     * The reference instance of <code>samply.user_consent</code>
     */
    public static final UserConsent USER_CONSENT = new UserConsent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserConsentRecord> getRecordType() {
        return UserConsentRecord.class;
    }

    /**
     * The column <code>samply.user_consent.user_id</code>.
     */
    public final TableField<UserConsentRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>samply.user_consent.consent_id</code>.
     */
    public final TableField<UserConsentRecord, Integer> CONSENT_ID = createField("consent_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>samply.user_consent.granted</code>.
     */
    public final TableField<UserConsentRecord, Timestamp> GRANTED = createField("granted", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>samply.user_consent.revoked</code>.
     */
    public final TableField<UserConsentRecord, Timestamp> REVOKED = createField("revoked", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>samply.user_consent</code> table reference
     */
    public UserConsent() {
        this("user_consent", null);
    }

    /**
     * Create an aliased <code>samply.user_consent</code> table reference
     */
    public UserConsent(String alias) {
        this(alias, USER_CONSENT);
    }

    private UserConsent(String alias, Table<UserConsentRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserConsent(String alias, Table<UserConsentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Samply.SAMPLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserConsentRecord> getPrimaryKey() {
        return Keys.USER_CONSENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserConsentRecord>> getKeys() {
        return Arrays.<UniqueKey<UserConsentRecord>>asList(Keys.USER_CONSENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserConsentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserConsentRecord, ?>>asList(Keys.USER_CONSENT__USER_CONSENT_USER_ID_FKEY, Keys.USER_CONSENT__USER_CONSENT_CONSENT_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserConsent as(String alias) {
        return new UserConsent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserConsent rename(String name) {
        return new UserConsent(name, null);
    }
}
